#!/bin/bash
set -o nounset
set -o errexit

export PATH=$PATH:/usr/sbin:/sbin:/usr/bin:/bin:/usr/local/bin/
readonly LOGGER_TAG="aws-s3-snapshot"
quiet=0

while getopts "q" opt; do
	case "$opt" in
	q)  quiet=1
		;;
	esac
done

function info {
	logger -p user.info -t "${LOGGER_TAG}" "$1";
	if [ $quiet -eq 0 ]; then
		echo -e "$( date +%T )" "\033[1;33m  $1\033[0m";
	fi
}
function error {
	logger -p user.error -t "${LOGGER_TAG}" "$1";
	if [ $quiet -eq 0 ]; then
		echo -e "$( date +%T )" "\033[1;31m  Error: $1\033[0m";
	fi
}
function die { error "$1"; exit 1; }

function main {
	AWS_DEFAULT_REGION="{{ elasticsearch.s3_backup.region }}"
	SNAPSHOT_BUCKET="{{ elasticsearch.s3_backup.bucket }}"
	SNAPSHOT_BASE_PATH="{{ elasticsearch.s3_backup.base_path }}"
	SERVER="http://localhost:{{ elasticsearch.port }}"

	snapshot_repo_data="{
		\"type\": \"s3\",
		\"settings\": {
			\"bucket\": \"${SNAPSHOT_BUCKET}\",
			\"region\": \"${AWS_DEFAULT_REGION}\",
			\"base_path\": \"${SNAPSHOT_BASE_PATH}\"
		}
	}"
	info "Creating snapshot repo"
	response="$( echo "${snapshot_repo_data}" | curl -s -XPUT \
		-d @- \
		"${SERVER}/_snapshot/${SNAPSHOT_BUCKET}" )"

	if [[ $response == *"acknowledged"* ]]; then
		info "Snapshot repo ready"
	else
		error "${response}"
		die "Error creating snapshot repo"
	fi

	snapshot_name="snapshot-all-$( date +%y-%m-%d-%s )"

	info "Creating SNAPSHOT ${snapshot_name}"
	response="$( curl -s -XPUT "${SERVER}/_snapshot/${SNAPSHOT_BUCKET}/${snapshot_name}?wait_for_completion=true" )"
	if [[ $response == *"\"failed\":0"* ]]; then
		info "Snapshot ready"
	else
		error "${response}"
		die "Error creating snapshot"
	fi
}

main "$@"
